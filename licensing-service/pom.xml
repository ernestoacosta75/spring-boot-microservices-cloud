<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.thoughtmechanix</groupId>
    <artifactId>licensing-service</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Eagle Eye Licensing Service</name>
    <description>Licensing Service</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.8.RELEASE</version>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <start-class>com.thoughtmechanix.licenses.LicenseMicroserviceBootstrapApplication</start-class>
        <spring.cloud.dependencies.version>Greenwich.RELEASE</spring.cloud.dependencies.version>
        <spring.cloud.eureka.starter.server.version>1.4.7.RELEASE</spring.cloud.eureka.starter.server.version>
        <hystrix.javanica.version>1.5.9</hystrix.javanica.version>
        <postgresql.version>42.2.5</postgresql.version>
        <lombock.version>1.18.4</lombock.version>
        <swagger2.springfox.version>2.8.0</swagger2.springfox.version>
        <swagger-maven.plugin.version>3.1.0</swagger-maven.plugin.version>
        <swagger.annotations.version>1.5.21</swagger.annotations.version>
        <jodatime.version>2.7</jodatime.version>
        <jaxb.api.version>2.1</jaxb.api.version>
        <jackson.version>2.9.10</jackson.version>
        <yaml.file>${project.basedir}/src/main/resources/eagleye-service.yaml</yaml.file>
        <generated-sources-path>${project.build.directory}/generated-sources</generated-sources-path>
        <generated-sources-java-path>main/java</generated-sources-java-path>
        <version.swagger.codegen>2.1.4</version.swagger.codegen>

        <maven.enforcer.plugin.version>3.0.0-M2</maven.enforcer.plugin.version>
        <docker.maven.plugin.version>0.4.10</docker.maven.plugin.version>
        <docker.image.name>eara/tmx-licensing-service</docker.image.name>
        <docker.image.tag>chapter5</docker.image.tag>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- Includes the Eureka libraries so that the service
         can register with Eureka. These libraries holds the jar
         files that Spring Cloud will use to interact with the  Eureka service.-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-eureka</artifactId>
            <version>${spring.cloud.eureka.starter.server.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-feign</artifactId>
            <version>${spring.cloud.eureka.starter.server.version}</version>
        </dependency>

        <!-- Spring Cloud Hystrix -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-hystrix</artifactId>
            <version>${spring.cloud.eureka.starter.server.version}</version>
        </dependency>

        <!-- Netflix Hystrix core libraries -->
        <dependency>
            <groupId>com.netflix.hystrix</groupId>
            <artifactId>hystrix-javanica</artifactId>
            <version>${hystrix.javanica.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-config-client</artifactId>
        </dependency>

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>
        <!--
              <dependency>
                  <groupId>org.postgresql</groupId>
                  <artifactId>postgresql</artifactId>
                  <version>${postgresql.version}</version>
              </dependency>
        -->
        <dependency>
            <groupId>postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>9.1-901.jdbc4</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-rsa</artifactId>
        </dependency>

        <!-- Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombock.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Swagger -->
        <!-- dependencies are needed for the client being generated -->
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-codegen</artifactId>
            <version>2.1.1</version>
        </dependency>

        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>${swagger.annotations.version}</version>
        </dependency>

        <!-- Joda time: if you use it -->
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-joda</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${jodatime.version}</version>
        </dependency>

        <!-- Test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${maven.enforcer.plugin.version}</version>
                <executions>
                    <execution>
                        <id>enforce-duplicate-dependencies-and-file-exists</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <banDuplicatePomDependencyVersions/>
                                <requireFilesExist>
                                    <files>
                                        <file>${project.basedir}/src/main/docker/Dockerfile</file>
                                        <file>${project.basedir}/src/main/docker/run.sh</file>
                                    </files>
                                </requireFilesExist>
                            </rules>
                        </configuration>
                    </execution>
                    <execution>
                        <id>enforce-maven-and-java-version</id>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>3.3.3</version>
                                    <message>Invalid Maven version. It should, at least, be 3.3.3</message>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>1.8</version>
                                    <message>Invalid Java version. It should, at least, be 1.8</message>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- We use the Resources plugin to filer Dockerfile and run.sh, it inserts actual JAR filename -->
            <!-- The final Dockerfile will be created in target/dockerfile/Dockerfile -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <!-- here the phase you need -->
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/dockerfile</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/docker</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker.maven.plugin.version}</version>
                <configuration>
                    <imageName>${docker.image.name}:${docker.image.tag}</imageName>
                    <dockerDirectory>${basedir}/target/dockerfile</dockerDirectory>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!--
            <plugin>
                <groupId>com.github.kongchen</groupId>
                <artifactId>swagger-maven-plugin</artifactId>
                <version>${swagger-maven.plugin.version}</version>
                <configuration>
                    <apiSources>
                        <apiSource>
                            <springmvc>true</springmvc>
                            <locations>
                                <location>com.thoughtmechanix.licenses.controllers</location>
                            </locations>
                            <schemes>
                                <scheme>http</scheme>
                                <scheme>https</scheme>
                            </schemes>
                            <host>www.example.com:8080</host>
                            <info>
                                <title>Swagger Maven Plugin Sample</title>
                                <version>v1</version>
                                <description>This is a sample</description>
                                <termsOfService>http://www.github.com/kongchen/swagger-maven-plugin</termsOfService>
                                <contact>
                                    <email>ernestoacostabaracoa@gmail.com</email>
                                    <name>Ernesto A. Rodriguez Acosta</name>
                                    <url>http://kongch.com</url>
                                </contact>
                                <license>
                                    <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
                                    <name>Apache 2.0</name>
                                </license>
                            </info>
                            <securityDefinitions>
                                <securityDefinition>
                                    <name>basicAuth</name>
                                    <type>basic</type>
                                </securityDefinition>
                                <securityDefinition>
                                    <json>/securityDefinition.json</json>
                                </securityDefinition>
                            </securityDefinitions>
                            <responseMessageOverrides>
                                <responseMessageOverride>
                                    <code>401</code>
                                    <message>Unauthenticated - could not authenticate the user.</message>
                                </responseMessageOverride>
                                <responseMessageOverride>
                                    <code>403</code>
                                    <message>Forbidden - the user does not have the required permissions to execute this
                                        request.
                                    </message>
                                </responseMessageOverride>
                            </responseMessageOverrides>
                            <templatePath>${basedir}/src/test/resources/strapdown.html.hbs</templatePath>
                            <outputPath>${basedir}/generated/document.html</outputPath>
                            <swaggerDirectory>${basedir}/generated/swagger-ui</swaggerDirectory>
                            <swaggerApiReader>com.wordnik.swagger.jaxrs.reader.DefaultJaxrsApiReader</swaggerApiReader>
                            <attachSwaggerArtifact>true</attachSwaggerArtifact>
                            <modelConverters>io.swagger.validator.BeanValidator</modelConverters>
                            <swaggerExtensions>
                                <swaggerExtension>com.example.VendorExtension</swaggerExtension>
                            </swaggerExtensions>
                            <enabledObjectMapperFeatures>
                                <feature>
                                    com.fasterxml.jackson.databind.SerializationFeature.WRITE_ENUMS_USING_TO_STRING
                                </feature>
                                <feature>com.fasterxml.jackson.core.JsonParser$Feature.ALLOW_NUMERIC_LEADING_ZEROS
                                </feature>
                            </enabledObjectMapperFeatures>
                            <disabledObjectMapperFeatures>
                                <feature>com.fasterxml.jackson.databind.SerializationFeature.FAIL_ON_EMPTY_BEANS
                                </feature>
                            </disabledObjectMapperFeatures>
                            <operationIdFormat>{{className}}_{{methodName}}_{{httpMethod}}</operationIdFormat>
                            <externalDocs>
                                <description>Example external docs</description>
                                <url>https://example.com/docs</url>
                            </externalDocs>
                        </apiSource>
                    </apiSources>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            -->
            <!-- activate the plugin -->
            <plugin>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-codegen-maven-plugin</artifactId>
                <version>2.3.1</version>
                <executions>
                    <execution>
                        <id>generate-swagger-javaclient</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/resources/swagger.yaml</inputSpec>
                            <language>java</language>
                            <output>${project.basedir}</output>

                            <apiPackage>${groupId}.licenses.api</apiPackage>
                            <modelPackage>${groupId}.licenses.model</modelPackage>
                            <generateApis>false</generateApis>
                            <generateApiDocumentation>false</generateApiDocumentation>
                            <generateSupportingFiles>false</generateSupportingFiles>
                            <generateModelDocumentation>false</generateModelDocumentation>

                            <configOptions>
                                <sourceFolder>${generated-sources-java-path}</sourceFolder>
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
